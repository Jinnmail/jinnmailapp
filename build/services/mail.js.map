{"version":3,"sources":["../../src/services/mail.js"],"names":["email_sender","forget_mail","sg","require","process","env","SENDGRID_API_KEY","toEmails","code","console","log","i","length","senderEmail","helper","Email","toEmail","content","Content","mail","Mail","request","emptyRequest","method","path","body","toJSON","API","error","response","statusCode","msg"],"mappings":";;;;;QAGgBA,Y,GAAAA,Y;QAuCAC,W,GAAAA,W;;AA1ChB;;AACA;;;;;;AACA,IAAMC,KAAKC,QAAQ,UAAR,EAAoBC,QAAQC,GAAR,CAAYC,gBAAhC,CAAX;AACO,SAASN,YAAT,CACHO,QADG,EAEHC,IAFG,EAGL;AACEC,YAAQC,GAAR,CAAYF,IAAZ;;AAEA,SAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIJ,SAASK,MAA7B,EAAqCD,KAAK,CAA1C,EAA6C;AACzC;AACA,YAAME,cAAc,IAAIC,eAAOC,KAAX,CAAiB,qBAAjB,CAApB;AACA;AACA,YAAMC,UAAU,IAAIF,eAAOC,KAAX,CAAiBR,SAASI,CAAT,CAAjB,CAAhB;AACA;AACA,YAAMM,UAAU,IAAIH,eAAOI,OAAX,CAAmB,WAAnB,kDAA8EV,IAA9E,CAAhB;AACA,YAAMW,OAAO,IAAIL,eAAOM,IAAX,CAAgBP,WAAhB,EAA6B,UAA7B,EAAyCG,OAAzC,EAAkDC,OAAlD,CAAb;AACA,YAAMI,UAAUnB,GAAGoB,YAAH,CAAgB;AAC5BC,oBAAQ,MADoB;AAE5BC,kBAAM,eAFsB;AAG5BC,kBAAMN,KAAKO,MAAL;AAHsB,SAAhB,CAAhB;AAKAxB,WAAGyB,GAAH,CAAON,OAAP,EAAgB,UAACO,KAAD,EAAQC,QAAR,EAAqB;AACjCpB,oBAAQC,GAAR,CAAY,UAAZ;AACA,gBAAIkB,KAAJ,EAAW;AACPnB,wBAAQC,GAAR,CAAY,yBAAZ;AACH;AACDD,oBAAQC,GAAR,CAAYmB,QAAZ,EAAqBD,KAArB;AACAnB,oBAAQC,GAAR,CAAYmB,SAASC,UAArB;AACArB,oBAAQC,GAAR,CAAYmB,SAASJ,IAArB;AACA;AACH,SATD;AAUH;AACD;AACA;AACA;AACA;AACA;AACA;AACH;;AAGM,SAASxB,WAAT,CACHM,QADG,EAEHwB,GAFG,EAGL;AACE,SAAK,IAAIpB,IAAI,CAAb,EAAgBA,IAAIJ,SAASK,MAA7B,EAAqCD,KAAK,CAA1C,EAA6C;AACzC;AACA,YAAME,cAAc,IAAIC,eAAOC,KAAX,CAAiB,qBAAjB,CAApB;AACA;AACA,YAAMC,UAAU,IAAIF,eAAOC,KAAX,CAAiBR,SAASI,CAAT,CAAjB,CAAhB;AACA;AACA,YAAMM,UAAU,IAAIH,eAAOI,OAAX,CAAmB,WAAnB,EAAgCa,GAAhC,CAAhB;AACA,YAAMZ,OAAO,IAAIL,eAAOM,IAAX,CAAgBP,WAAhB,EAA6B,QAA7B,EAAuCG,OAAvC,EAAgDC,OAAhD,CAAb;AACA,YAAMI,UAAUnB,GAAGoB,YAAH,CAAgB;AAC5BC,oBAAQ,MADoB;AAE5BC,kBAAM,eAFsB;AAG5BC,kBAAMN,KAAKO,MAAL;AAHsB,SAAhB,CAAhB;AAKAxB,WAAGyB,GAAH,CAAON,OAAP,EAAgB,UAACO,KAAD,EAAQC,QAAR,EAAqB;AACjCpB,oBAAQC,GAAR,CAAY,UAAZ;AACA,gBAAIkB,KAAJ,EAAW;AACPnB,wBAAQC,GAAR,CAAY,yBAAZ;AACH;AACDD,oBAAQC,GAAR,CAAYmB,QAAZ,EAAqBD,KAArB;AACAnB,oBAAQC,GAAR,CAAYmB,SAASC,UAArB;AACArB,oBAAQC,GAAR,CAAYmB,SAASJ,IAArB;AACA;AACH,SATD;AAUH;AACD;AACA;AACA;AACA;AACA;AACA;AACH;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mail.js","sourcesContent":["import { mail as helper } from 'sendgrid';\r\nimport async from 'async';\r\nconst sg = require('sendgrid')(process.env.SENDGRID_API_KEY);\r\nexport function email_sender(\r\n    toEmails,\r\n    code\r\n) {\r\n    console.log(code);\r\n    \r\n    for (let i = 0; i < toEmails.length; i += 1) {\r\n        // Add from emails\r\n        const senderEmail = new helper.Email('george@jinnmail.com');\r\n        // Add to email\r\n        const toEmail = new helper.Email(toEmails[i]);\r\n        // HTML Content\r\n        const content = new helper.Content('text/html', `welcome to jinnmail, verification code is: ${code}`);\r\n        const mail = new helper.Mail(senderEmail, 'jinnmail', toEmail, content);\r\n        const request = sg.emptyRequest({\r\n            method: 'POST',\r\n            path: '/v3/mail/send',\r\n            body: mail.toJSON()\r\n        });\r\n        sg.API(request, (error, response) => {\r\n            console.log('SendGrid');\r\n            if (error) {\r\n                console.log('Error response received');\r\n            }\r\n            console.log(response,error)\r\n            console.log(response.statusCode);\r\n            console.log(response.body);\r\n            // console.log(response.headers);\r\n        });\r\n    }\r\n    // parentCallback(null,\r\n    //     {\r\n    //         successfulEmails,\r\n    //         errorEmails,\r\n    //     }\r\n    // );\r\n}\r\n\r\n\r\nexport function forget_mail(\r\n    toEmails,\r\n    msg\r\n) {\r\n    for (let i = 0; i < toEmails.length; i += 1) {\r\n        // Add from emails\r\n        const senderEmail = new helper.Email('george@jinnmail.com');\r\n        // Add to email\r\n        const toEmail = new helper.Email(toEmails[i]);\r\n        // HTML Content\r\n        const content = new helper.Content('text/html', msg);\r\n        const mail = new helper.Mail(senderEmail, 'forget', toEmail, content);\r\n        const request = sg.emptyRequest({\r\n            method: 'POST',\r\n            path: '/v3/mail/send',\r\n            body: mail.toJSON()\r\n        });\r\n        sg.API(request, (error, response) => {\r\n            console.log('SendGrid');\r\n            if (error) {\r\n                console.log('Error response received');\r\n            }\r\n            console.log(response,error)\r\n            console.log(response.statusCode);\r\n            console.log(response.body);\r\n            // console.log(response.headers);\r\n        });\r\n    }\r\n    // parentCallback(null,\r\n    //     {\r\n    //         successfulEmails,\r\n    //         errorEmails,\r\n    //     }\r\n    // );\r\n}\r\n\r\n// async.parallel([\r\n//     callback => {\r\n//         email_sender(\r\n//             callback,\r\n//             'george@jinnmail.com',\r\n//             ['anuragpurwar007@gmail.com'],\r\n//             'Subject Line',\r\n//             'Text Content',\r\n//             '<p style=\"font-size: 32px;\">HTML Content</p>'\r\n//         );\r\n//     }\r\n// ], (err, results) => {\r\n//     console.log(results, \"res\")\r\n// });\r\n\r\n\r\n// const sgMail = require('@sendgrid/mail');\r\n// sgMail.setApiKey(process.env.SENDGRID_API_KEY);\r\n// export function email_sender(to) {\r\n//     console.log(to)\r\n//   const msg = {\r\n//         to: to,\r\n//         from:\"george@jinnmail.com\",\r\n//         subject: 'jinnmail',\r\n//         text: 'hello',\r\n//         html: '<strong>welcome to jinnmail</strong>',\r\n//     };\r\n//     sgMail.send(msg);\r\n// }"]}