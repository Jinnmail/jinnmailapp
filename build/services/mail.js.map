{"version":3,"sources":["../../src/services/mail.js"],"names":["sendEmail","parentCallback","fromEmail","toEmails","subject","textContent","htmlContent","errorEmails","successfulEmails","sg","require","async","parallel","i","length","senderEmail","helper","Email","toEmail","content","Content","mail","Mail","request","emptyRequest","method","path","body","toJSON","API","error","response","console","log","statusCode","callback","err","results"],"mappings":";;AAAA;;AACA;;;;;;AACA,SAASA,SAAT,CACIC,cADJ,EAEIC,SAFJ,EAGIC,QAHJ,EAIIC,OAJJ,EAKIC,WALJ,EAMIC,WANJ,EAOE;AACE,QAAMC,cAAc,EAApB;AACA,QAAMC,mBAAmB,EAAzB;AACF;AACE,QAAMC,KAAKC,QAAQ,UAAR,EAAoB,uEAApB,CAAX;AACAC,oBAAMC,QAAN,CAAe,CACX,oBAAY;AACR;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIV,SAASW,MAA7B,EAAqCD,KAAK,CAA1C,EAA6C;AACzC;AACA,gBAAME,cAAc,IAAIC,eAAOC,KAAX,CAAiBf,SAAjB,CAApB;AACA;AACA,gBAAMgB,UAAU,IAAIF,eAAOC,KAAX,CAAiBd,SAASU,CAAT,CAAjB,CAAhB;AACA;AACA,gBAAMM,UAAU,IAAIH,eAAOI,OAAX,CAAmB,WAAnB,EAAgCd,WAAhC,CAAhB;AACA,gBAAMe,OAAO,IAAIL,eAAOM,IAAX,CAAgBP,WAAhB,EAA6BX,OAA7B,EAAsCc,OAAtC,EAA+CC,OAA/C,CAAb;AACA,gBAAMI,UAAUd,GAAGe,YAAH,CAAgB;AAC5BC,wBAAQ,MADoB;AAE5BC,sBAAM,eAFsB;AAG5BC,sBAAMN,KAAKO,MAAL;AAHsB,aAAhB,CAAhB;AAKAnB,eAAGoB,GAAH,CAAON,OAAP,EAAgB,UAACO,KAAD,EAAQC,QAAR,EAAqB;AACjCC,wBAAQC,GAAR,CAAY,UAAZ;AACA,oBAAIH,KAAJ,EAAW;AACPE,4BAAQC,GAAR,CAAY,yBAAZ;AACH;AACDD,wBAAQC,GAAR,CAAYF,QAAZ,EAAqBD,KAArB;AACAE,wBAAQC,GAAR,CAAYF,SAASG,UAArB;AACAF,wBAAQC,GAAR,CAAYF,SAASJ,IAArB;AACA;AACH,aATD;AAUH;AACD;AACAQ,iBAAS,IAAT,EAAe,IAAf;AACH,KA7BU,CAAf,EA8BG,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACjBL,gBAAQC,GAAR,CAAY,MAAZ;AACH,KAhCD;AAiCAhC,mBAAe,IAAf,EACI;AACIO,0CADJ;AAEID;AAFJ,KADJ;AAMH;;AAEDI,gBAAMC,QAAN,CAAe,CACX,oBAAY;AACRZ,cACImC,QADJ,EAEI,qBAFJ,EAGI,CAAC,2BAAD,CAHJ,EAII,cAJJ,EAKI,cALJ,EAMI,8CANJ;AAQH,CAVU,CAAf,EAWG,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACjBL,YAAQC,GAAR,CAAYI,OAAZ,EAAqB,KAArB;AACH,CAbD;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mail.js","sourcesContent":["import { mail as helper } from 'sendgrid';\r\nimport async from 'async';\r\nfunction sendEmail(\r\n    parentCallback,\r\n    fromEmail,\r\n    toEmails,\r\n    subject,\r\n    textContent,\r\n    htmlContent\r\n) {\r\n    const errorEmails = [];\r\n    const successfulEmails = [];\r\n  //  console.log(process.env.SENDGRID_API_KEY)\r\n    const sg = require('sendgrid')('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');\r\n    async.parallel([\r\n        callback => {\r\n            // Add to emails\r\n            for (let i = 0; i < toEmails.length; i += 1) {\r\n                // Add from emails\r\n                const senderEmail = new helper.Email(fromEmail);\r\n                // Add to email\r\n                const toEmail = new helper.Email(toEmails[i]);\r\n                // HTML Content\r\n                const content = new helper.Content('text/html', htmlContent);\r\n                const mail = new helper.Mail(senderEmail, subject, toEmail, content);\r\n                const request = sg.emptyRequest({\r\n                    method: 'POST',\r\n                    path: '/v3/mail/send',\r\n                    body: mail.toJSON()\r\n                });\r\n                sg.API(request, (error, response) => {\r\n                    console.log('SendGrid');\r\n                    if (error) {\r\n                        console.log('Error response received');\r\n                    }\r\n                    console.log(response,error)\r\n                    console.log(response.statusCode);\r\n                    console.log(response.body);\r\n                    // console.log(response.headers);\r\n                });\r\n            }\r\n            // return\r\n            callback(null, true);\r\n        }\r\n    ], (err, results) => {\r\n        console.log('Done');\r\n    });\r\n    parentCallback(null,\r\n        {\r\n            successfulEmails,\r\n            errorEmails,\r\n        }\r\n    );\r\n}\r\n\r\nasync.parallel([\r\n    callback => {\r\n        sendEmail(\r\n            callback,\r\n            'george@jinnmail.com',\r\n            ['anuragpurwar007@gmail.com'],\r\n            'Subject Line',\r\n            'Text Content',\r\n            '<p style=\"font-size: 32px;\">HTML Content</p>'\r\n        );\r\n    }\r\n], (err, results) => {\r\n    console.log(results, \"res\")\r\n});\r\n\r\n\r\n// const sgMail = require('@sendgrid/mail');\r\n// sgMail.setApiKey(process.env.SENDGRID_API_KEY);\r\n// const msg = {\r\n//   to: 'to',\r\n//   from: 'from',\r\n//   subject: 'Sending with SendGrid is Fun',\r\n//   text: 'and easy to do anywhere, even with Node.js',\r\n//   html: '<strong>and easy to do anywhere, even with Node.js</strong>',\r\n// };\r\n// sgMail.send(msg);"]}