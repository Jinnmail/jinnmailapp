{"version":3,"sources":["../../src/routes/alias.js"],"names":["validator","AliasRoute","router","express","Router","routes","req","res","body","userId","alias","registerAlias","then","data","reqRes","responseHandler","end","catch","err","console","log","httpErrorHandler","checkAvailability","getRegisteredAlias","getAlias","changeStatusOfAlias","params","aliasId","deleteAlias","getAliasUser","post","userAuth","get","put","changeAliasStatus","delete"],"mappings":"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","file":"alias.js","sourcesContent":["import express from 'express'\r\nimport userAuth from '../middlewares/userAuth'\r\nimport reqRes from '../middlewares/reqRes'\r\nimport alias from '../controller/alias';\r\nimport * as validator from '../middlewares/validator'\r\n\r\n\r\nclass AliasRoute {\r\n    router\r\n\r\n    constructor() {\r\n        this.router = express.Router()\r\n        this.routes()\r\n    }\r\n\r\n    //writing routes here\r\n    registerAlias(req, res) {\r\n        req.body.userId = req.userId;\r\n        alias.registerAlias(req.body)\r\n            .then((data) => {\r\n                reqRes.responseHandler('alias registered', data, res);\r\n                res.end();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                reqRes.httpErrorHandler(err, res)\r\n                res.end()\r\n            })\r\n    }\r\n\r\n    checkAvailability(req, res) {\r\n        alias.checkAvailability(req.body)\r\n            .then((data) => {\r\n                reqRes.responseHandler('alias available', data, res);\r\n            }).catch((err) => {\r\n                reqRes.httpErrorHandler(err, res)\r\n                res.end()\r\n            })\r\n    }\r\n\r\n    getRegisteredAlias(req, res) {\r\n        alias.getRegisteredAlias(req)\r\n            .then((data) => {\r\n                reqRes.responseHandler('fetched successfully', data, res);\r\n            }).catch((err) => {\r\n                reqRes.httpErrorHandler(err, res);\r\n                res.end();\r\n            })\r\n    }\r\n\r\n    getAlias(req, res) {\r\n        alias.getAlias(req)\r\n            .then((data) => {\r\n                reqRes.responseHandler('fetched successfully', data, res);\r\n            }).catch((err) => {\r\n                reqRes.httpErrorHandler(err, res);\r\n                res.end();\r\n            })\r\n    }\r\n\r\n    changeAliasStatus(req, res) {\r\n        req.body.userId = req.userId;\r\n        alias.changeStatusOfAlias(req.body)\r\n            .then((data) => {\r\n                reqRes.responseHandler('updated successfully', data, res);\r\n            }).catch((err) => {\r\n                reqRes.httpErrorHandler(err, res);\r\n                res.end();\r\n            })\r\n    }\r\n\r\n\r\n    deleteAlias(req, res) {\r\n        console.log('delete', req.params.aliasId);\r\n        alias.deleteAlias(req)\r\n        .then((data) => {\r\n            reqRes.responseHandler('deleted successfully', data, res);\r\n        }).catch((err) => {\r\n            reqRes.httpErrorHandler(err, res);\r\n            res.end();\r\n        })\r\n    }\r\n\r\n    getAliasUser(req,res) {\r\n        alias.getAliasUser(req)\r\n            .then((data) => {\r\n                reqRes.responseHandler('fetched successfully', data, res);\r\n            }).catch((err) => {\r\n                reqRes.httpErrorHandler(err, res);\r\n                res.end();\r\n            })\r\n    }\r\n        \r\n\r\n    routes() {\r\n        this.router.post('/', userAuth, this.registerAlias);\r\n        this.router.get('/', userAuth,  this.getRegisteredAlias);\r\n        this.router.get('/checkAlias', userAuth, this.getAlias);\r\n        this.router.post('/avail', userAuth, this.checkAvailability);\r\n        this.router.put('/status', userAuth, this.changeAliasStatus);\r\n        this.router.delete('/:aliasId', userAuth, this.deleteAlias);\r\n        this.router.get('/linkedUser', this.getAliasUser)\r\n    }\r\n}\r\nexport default new AliasRoute().router"]}