{"version":3,"sources":["../../src/models/user.js"],"names":["SALT_WORK_FACTOR","userSchema","mongoose","Schema","userId","type","String","required","email","unique","lowercase","password","validate","v","length","created","Date","default","now","aliasesCount","Number","pre","next","user","isModified","bcrypt","genSalt","err","salt","hash","model"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAIA,mBAAmB,EAAvB;;AAEA,IAAMC,aAAaC,aAASC,MAAT,CAAgB;AAC/BC,YAAQ;AACJC,cAAMC,MADF;AAEJC,kBAAU;AAFN,KADuB;AAK/BC,WAAO;AACHH,cAAMC,MADH;AAEHG,gBAAQ,IAFL;AAGHC,mBAAW,IAHR;AAIHH,kBAAW,CAAC,IAAD,EAAO,yBAAP;AAJR,KALwB;AAW/BI,cAAU;AACNN,cAAMC,MADA;AAENC,kBAAU,CAAC,IAAD,EAAO,4BAAP,CAFJ;AAGNK,kBAAU,CAAC,UAAUC,CAAV,EAAa;AACpB,mBAAOA,EAAEC,MAAF,IAAY,CAAnB;AACH,SAFS,EAEP,gCAFO;AAHJ,KAXqB;AAkB/BC,aAAS;AACLV,cAAMW,IADD;AAELC,iBAASD,KAAKE;AAFT,KAlBsB;AAsB/BC,kBAAc;AACVd,cAAMe,MADI;AAEVH,iBAAS;AAFC;AAtBiB,CAAhB,CAAnB;AA2BA;;;;AAIAhB,WAAWoB,GAAX,CAAe,MAAf,EAAuB,UAAUC,IAAV,EAAgB;AACnC,QAAMC,OAAO,IAAb;AACA,QAAI,CAACA,KAAKC,UAAL,CAAgB,UAAhB,CAAL,EACI,OAAOF,MAAP;;AAEJG,2BAAOC,OAAP,CAAe1B,gBAAf,EAAiC,UAAC2B,GAAD,EAAMC,IAAN,EAAe;AAC5C,YAAID,GAAJ,EACI,OAAOL,KAAKK,GAAL,CAAP;AACJF,+BAAOI,IAAP,CAAYN,KAAKZ,QAAjB,EAA2BiB,IAA3B,EAAiC,IAAjC,EAAuC,UAACD,GAAD,EAAME,IAAN,EAAe;AAClD,gBAAIF,GAAJ,EACI,OAAOL,KAAKK,GAAL,CAAP;;AAEJJ,iBAAKZ,QAAL,GAAgBkB,IAAhB;AACAP;AACH,SAND;AAOH,KAVD;AAWH,CAhBD;;AAkBA,IAAMC,OAAOrB,aAAS4B,KAAT,CAAe,MAAf,EAAuB7B,UAAvB,CAAb;;kBAEesB,I","file":"user.js","sourcesContent":["import mongoose from '../db/db'\r\nimport bcrypt from 'bcrypt-nodejs';\r\n\r\nlet SALT_WORK_FACTOR = 10;\r\n\r\nconst userSchema = mongoose.Schema({\r\n    userId: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    email: {\r\n        type: String,\r\n        unique: true,\r\n        lowercase: true,\r\n        required:  [true, 'email field is Required']\r\n    },\r\n    password: {\r\n        type: String,\r\n        required: [true, 'password field is Required'],\r\n        validate: [function (v) {\r\n            return v.length >= 8;\r\n        }, 'Password min length is 8 chars']\r\n    },\r\n    created: {\r\n        type: Date,\r\n        default: Date.now\r\n    },\r\n    aliasesCount: {\r\n        type: Number,\r\n        default: 0\r\n    }\r\n});\r\n/*\r\n * Encrypt the password before saving it to DB\r\n */\r\n\r\nuserSchema.pre('save', function (next) {\r\n    const user = this;\r\n    if (!user.isModified('password'))\r\n        return next();\r\n\r\n    bcrypt.genSalt(SALT_WORK_FACTOR, (err, salt) => {\r\n        if (err)\r\n            return next(err);\r\n        bcrypt.hash(user.password, salt, null, (err, hash) => {\r\n            if (err)\r\n                return next(err);\r\n\r\n            user.password = hash;\r\n            next();\r\n        });\r\n    });\r\n});\r\n\r\nconst user = mongoose.model('user', userSchema);\r\n\r\nexport default user;\r\n\r\n"]}