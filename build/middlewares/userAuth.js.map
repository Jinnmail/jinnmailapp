{"version":3,"sources":["../../src/middlewares/userAuth.js"],"names":["validateUser","jwt","req","res","next","token","header","console","log","verify","process","env","JWT_SECRET","err","decoded","status","json","error","result","userId"],"mappings":";;;;;kBAIwBA,Y;;AAJxB;;IAAYC,G;;AACZ;;;;;;;;AAGe,SAASD,YAAT,CAAsBE,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;;AAEjD,QAAIC,QAAQH,IAAII,MAAJ,CAAW,eAAX,CAAZ;AACA,QAAID,KAAJ,EAAW;AACPE,gBAAQC,GAAR,CAAY,qCAAZ;AACAP,YAAIQ,MAAJ,CAAWJ,KAAX,EAAkBK,QAAQC,GAAR,CAAYC,UAA9B,EAA0C,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACxD,gBAAID,GAAJ,EAAS;AACLV,oBAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,4BAAQ,GADS;AAEjBE,2BAAO,8BAFU;AAGjBC,4BAAQ;AAHS,iBAArB;AAKH,aAND,MAMO;AACHhB,oBAAIiB,MAAJ,GAAaL,QAAQK,MAArB;AACAZ,wBAAQC,GAAR,CAAY,wBAAwBN,IAAIiB,MAAxC;AACAf;AACH;AACJ,SAZD;AAaH,KAfD,MAeO;AACH,eAAOD,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,oBAAQ,GADgB;AAExBE,mBAAO,2BAFiB;AAGxBC,oBAAQ;AAHgB,SAArB,CAAP;AAKH;AACJ","file":"userAuth.js","sourcesContent":["import * as jwt from \"jsonwebtoken\";\nimport cred from '../config/const'\n\n\nexport default function validateUser(req, res, next) {\n\n    var token = req.header('Authorization');\n    if (token) {\n        console.log('In jwt verify middleware for userId');\n        jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {\n            if (err) {\n                res.status(401).json({\n                    status: 401,\n                    error: 'Failed to authenticated user',\n                    result: ''\n                });\n            } else {\n                req.userId = decoded.userId;\n                console.log('req.userId set to- ' + req.userId);\n                next();\n            }\n        });\n    } else {\n        return res.status(401).json({\n            status: 401,\n            error: 'No session token provided',\n            result: ''\n        });\n    }\n}"]}