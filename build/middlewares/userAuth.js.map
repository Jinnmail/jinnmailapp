{"version":3,"sources":["../../src/middlewares/userAuth.js"],"names":["validateUser","jwt","req","res","next","token","header","console","log","verify","process","env","JWT_SECRET","err","decoded","status","json","error","result","userId"],"mappings":";;;;;kBAIwBA,Y;;AAJxB;;IAAYC,G;;AACZ;;;;;;;;AAGe,SAASD,YAAT,CAAsBE,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;;AAEjD,QAAIC,QAAQH,IAAII,MAAJ,CAAW,eAAX,CAAZ;AACA,QAAID,KAAJ,EAAW;AACPE,gBAAQC,GAAR,CAAY,qCAAZ;AACAP,YAAIQ,MAAJ,CAAWJ,KAAX,EAAkBK,QAAQC,GAAR,CAAYC,UAA9B,EAA0C,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACxD,gBAAID,GAAJ,EAAS;AACLV,oBAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBD,4BAAQ,GADS;AAEjBE,2BAAO,8BAFU;AAGjBC,4BAAQ;AAHS,iBAArB;AAKH,aAND,MAMO;AACHhB,oBAAIiB,MAAJ,GAAaL,QAAQK,MAArB;AACAZ,wBAAQC,GAAR,CAAY,wBAAwBN,IAAIiB,MAAxC;AACAf;AACH;AACJ,SAZD;AAaH,KAfD,MAeO;AACH,eAAOD,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,oBAAQ,GADgB;AAExBE,mBAAO,2BAFiB;AAGxBC,oBAAQ;AAHgB,SAArB,CAAP;AAKH;AACJ","file":"userAuth.js","sourcesContent":["import * as jwt from \"jsonwebtoken\";\r\nimport cred from '../config/const'\r\n\r\n\r\nexport default function validateUser(req, res, next) {\r\n\r\n    var token = req.header('Authorization');\r\n    if (token) {\r\n        console.log('In jwt verify middleware for userId');\r\n        jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {\r\n            if (err) {\r\n                res.status(401).json({\r\n                    status: 401,\r\n                    error: 'Failed to authenticated user',\r\n                    result: ''\r\n                });\r\n            } else {\r\n                req.userId = decoded.userId;\r\n                console.log('req.userId set to- ' + req.userId);\r\n                next();\r\n            }\r\n        });\r\n    } else {\r\n        return res.status(401).json({\r\n            status: 401,\r\n            error: 'No session token provided',\r\n            result: ''\r\n        });\r\n    }\r\n}"]}