{"version":3,"sources":["../../src/controller/mailDetails.js"],"names":["mailModel","require","request","MailController","data","Promise","resolve","reject","find","uid","then","result","catch","code","msg","err","url","wid","mid","options","method","json","res","body","console","log","unseen","JSON","stringify","link","option","doc","results","length","count","mostRecent","from","address","to","module","exports"],"mappings":"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","file":"mailDetails.js","sourcesContent":["const mailModel = require('../models/mailDetails');\r\nconst request = require('request');\r\n\r\nclass MailController{\r\n    getDetails(data){\r\n        // console.log(\"DATA: \"+JSON.stringify(data))\r\n        return new Promise((resolve, reject) => {\r\n            // console.log(\"DATA: \"+typeof(data.uid))\r\n            mailModel.find({\"alias\":data.uid})\r\n                .then( result => {\r\n                    resolve(result)\r\n                })\r\n                .catch(err=>{\r\n                    reject({ code: 500, msg: err })\r\n                })\r\n        })\r\n    }\r\n    getInboxDetails(data){\r\n        // data = JSON.parse(data);\r\n        return new Promise((resolve, reject) => {\r\n            let url = `https://jinnmail.com/api/users/${data.wid}/mailboxes/${data.mid}`;\r\n            let options = {\r\n                method: 'get',\r\n                json: true,\r\n                url: url\r\n            };\r\n            request(options, (err, res, body) => {\r\n                if (err) { console.log(err); }\r\n                let result = {};\r\n                result.unseen = body.unseen;\r\n                console.log(`${JSON.stringify(data)}-${typeof(data.wid)}-${data[\"wid\"]}`)\r\n                let link = `https://jinnmail.com/api/users/${data.wid}/mailboxes/${data.mid}/messages`;\r\n                let option = {\r\n                    method: 'get',\r\n                    json: true,\r\n                    url: link\r\n                };\r\n                request(option, (err, res, doc) => {\r\n                    if (err) { console.log(err); }\r\n                    console.log(doc)\r\n                    if(doc.results.length>0)\r\n                    {\r\n                        result.count = doc.results.length;\r\n                        result.mostRecent = doc.results[0].from.address;\r\n                    }\r\n                    else\r\n                    {\r\n                        result.count = 0;\r\n                        result.mostRecent = \"None\";\r\n                    }\r\n                    console.log(result);\r\n                    resolve(result)\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    getOutboxDetails(data){\r\n        // data = JSON.parse(data);\r\n        return new Promise((resolve, reject) => {\r\n            let url = `https://jinnmail.com/api/users/${data.wid}/mailboxes/${data.mid}`;\r\n            let options = {\r\n                method: 'get',\r\n                json: true,\r\n                url: url\r\n            };\r\n            request(options, (err, res, body) => {\r\n                if (err) { console.log(err); }\r\n                let result = {};\r\n                result.unseen = body.unseen;\r\n                console.log(`${JSON.stringify(data)}-${typeof(data.wid)}-${data[\"wid\"]}`)\r\n                let link = `https://jinnmail.com/api/users/${data.wid}/mailboxes/${data.mid}/messages`;\r\n                let option = {\r\n                    method: 'get',\r\n                    json: true,\r\n                    url: link\r\n                };\r\n                request(option, (err, res, doc) => {\r\n                    if (err) { console.log(err); }\r\n                    console.log(doc)\r\n                    if(doc.results.length>0)\r\n                    {\r\n                        result.count = doc.results.length;\r\n                        result.mostRecent = doc.results[0].to[0].address;\r\n                    }\r\n                    else\r\n                    {\r\n                        result.count = 0;\r\n                        result.mostRecent = \"None\";\r\n                    }\r\n                    console.log(result);\r\n                    resolve(result)\r\n                })\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nmodule.exports = new MailController();"]}