{"version":3,"sources":["../src/app.js"],"names":["server","app","config","routes","process","on","reason","p","console","log","use","bodyParser","urlencoded","extended","json","userRoutes","aliasRoutes","adminRoutes"],"mappings":";;;;;;;;AAUA;;AAMA;;;AAdA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAIA;;;;AACA;;;;AACA;;;;AAGA;;;;;;;;IAEMA,M;AAGJ,oBAAc;AAAA;;AACZ,SAAKC,GAAL,GAAW,wBAAX;AACA,SAAKC,MAAL;AACA,SAAKC,MAAL;AACAC,YAAQC,EAAR,CAAW,oBAAX,EAAiC,UAACC,MAAD,EAASC,CAAT,EAAe;AAC9CC,cAAQC,GAAR,CAAY,iCAAZ,EAA+CF,CAA/C,EAAkD,SAAlD,EAA6DD,MAA7D;AACA;AACD,KAHD;AAID;;;;6BAEQ;AACP,WAAKL,GAAL,CAASS,GAAT,CAAa,iCAAb;AACA,WAAKT,GAAL,CAASS,GAAT,CAAa,qBAAb;AACA,WAAKT,GAAL,CAASS,GAAT,CAAaC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAb;AACA,WAAKZ,GAAL,CAASS,GAAT,CAAaC,qBAAWG,IAAX,EAAb;AACA,WAAKb,GAAL,CAASS,GAAT,CAAa,6BAAb;AACD;;;6BACQ;;AAEP,WAAKT,GAAL,CAASS,GAAT,CAAa,cAAb,EAA6BK,cAA7B;AACA,WAAKd,GAAL,CAASS,GAAT,CAAa,eAAb,EAA8BM,eAA9B;AACA,WAAKf,GAAL,CAASS,GAAT,CAAa,eAAb,EAA8BO,eAA9B;AACD;;;;;;kBAGY,IAAIjB,MAAJ,GAAaC,G","file":"app.js","sourcesContent":["\n\nimport express from 'express'\nimport path from 'path'\nimport bodyParser from 'body-parser'\nimport cookieParser from 'cookie-parser'\nimport cors from 'cors';\nimport {} from 'dotenv/config';\nimport validator from 'express-validator';\n\n// Importing route files from ./routes\n\nimport userRoutes from './routes/user'\nimport aliasRoutes from './routes/alias'\nimport adminRoutes from './routes/admin'\n\n//logger\nimport logger from './utils/logger';\n\nclass server {\n  app\n\n  constructor() {\n    this.app = express();\n    this.config();\n    this.routes();\n    process.on('unhandledRejection', (reason, p) => {\n      console.log('Unhandled Rejection at: Promise', p, 'reason:', reason);\n      // application specific logging, throwing an error, or other logic here\n    });\n  }\n\n  config() {\n    this.app.use(validator());\n    this.app.use(cors());\n    this.app.use(bodyParser.urlencoded({ extended: true }));\n    this.app.use(bodyParser.json());\n    this.app.use(cookieParser());\n  }\n  routes() {\n\n    this.app.use('/api/v1/user', userRoutes);\n    this.app.use('/api/v1/alias', aliasRoutes);\n    this.app.use('/api/v1/admin', adminRoutes)\n  }\n\n}\nexport default new server().app"]}